{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","theme","href","title","type","id","role","style","color","onClick","changeTheme","Textform","useState","text","setText","marginBottom","heading","onChange","event","target","value","rows","backgroundColor","netText","toUpperCase","length","showAlert","toLowerCase","navigator","clipboard","writeText","newText","split","join","filter","element","Alert","word","height","alert","ty","charAt","slice","msg","App","setAlert","handleShowAlert","message","setTimeout","setTheme","about","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.33167093.chunk.js","sourcesContent":["import React from \"react\";\n// import {Link} from \"react-router-dom\";\n\nexport default function Navbar(props) {\n\n  return (\n    <div>\n      <nav className={`navbar navbar-expand-lg navbar-${props.theme} bg-${props.theme}`}>\n        <div className=\"container-fluid\">\n          {/* <Link className=\"navbar-brand\" to=\"/\">\n            {props.title}\n          </Link> */}\n           <a className=\"navbar-brand\" href=\"#\">\n            {props.title}\n          </a>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              <li className=\"nav-item\">\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\n                  Home\n                </Link> */}\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\n                  Home\n                </a>\n              </li>\n              {/* <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/about\">\n                  {props.about}\n                </Link>\n              </li> */}\n            </ul>\n            <div className=\"d-flex\">\n              <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                <li className=\"nav-item dropdown\">\n                  {/* <Link\n                    className=\"nav-link dropdown-toggle\"\n                    to=\"/\"\n                    id=\"navbarDropdown\"\n                    role=\"button\"\n                    data-bs-toggle=\"dropdown\"\n                    aria-expanded=\"false\"\n                  >\n                    Change Theme\n                  </Link> */}\n                  <a\n                    className=\"nav-link dropdown-toggle\"\n                    href=\"#\"\n                    id=\"navbarDropdown\"\n                    role=\"button\"\n                    data-bs-toggle=\"dropdown\"\n                    aria-expanded=\"false\"\n                  >\n                    Change Theme\n                  </a>\n                  <ul\n                    className={`dropdown-menu bg-${props.theme}`}\n                    aria-labelledby=\"navbarDropdown\"\n                  >\n                    <li>\n                      <span\n                        className=\"dropdown-item\"\n                        style={{color: props.theme==='dark'?'white':'black'}}\n                        onClick={()=>props.changeTheme(\"dark\")}\n                      >\n                        Dark\n                      </span>\n                    </li>\n                    <li>\n                      <span\n                        className=\"dropdown-item\"\n                        style={{color: props.theme==='dark'?'white':'black'}}\n                        onClick={()=>props.changeTheme(\"light\")}\n                      >\n                        Light\n                      </span>\n                    </li>\n                  </ul>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\n\nexport default function Textform(props) {\n\n  const handleCopy = () => {\n    navigator.clipboard.writeText(text);\n    if(text.length>0){\n    props.showAlert(\"Text copied.\", \"success\");\n  }\n  }\n\n  const handleExtraSpaces = () => {\n    let newText = text.split(/[ ]+/);\n    setText(newText.join(\" \"));\n    if(text.length>0){\n    props.showAlert(\"Extra spaces removed.\", \"success\");\n  }}\n\n  const handleUpClick = () => {\n    let netText = text.toUpperCase();\n    setText(netText);\n    if(text.length>0){\n    props.showAlert(\"Text has been changed to UPPERCASE.\", \"success\");\n\n  }}\n\n  const handleLoClick = () => {\n    let netText = text.toLowerCase();\n    setText(netText);\n    if(text.length>0){\n    props.showAlert(\"Text has been changed to lowercase.\", \"success\");\n\n  }}\n\n  const handleClearText = () => {\n    setText(\"\");\n    if(text.length>0){\n    props.showAlert(\"Text has been cleared.\", \"success\")\n  }}\n\n  const handleOnChange = (event) => {\n    setText(event.target.value);\n\n  }\n\n  const [text, setText] = useState('');\n  return (\n    <>\n      <div>\n        <h1 className=\"text-center\" style={{marginBottom:\"20px\"}}>{props.heading}</h1>\n        <div className=\"mb-3\">\n          <textarea\n            className={`form-control bg-${props.theme}`}\n            onChange={handleOnChange}\n            id=\"myBox\"\n            rows=\"8\"\n            value={text}\n            style={{ backgroundColor: props.theme === 'dark' ? 'grey' : 'white', color: props.theme === 'dark' ? 'white' : '#042743' }}\n          ></textarea>\n        </div>\n        <button className=\"btn btn-primary mx-1 my-1 button-size\" onClick={handleUpClick}>Convert to uppercase</button>\n        <button className=\"btn btn-primary mx-1 my-1 button-size\" onClick={handleLoClick}>Convert to lowercase</button>\n        <button className=\"btn btn-primary mx-1 my-1 button-size\" onClick={handleCopy}>Copy</button>\n        <button className=\"btn btn-primary mx-1 my-1 button-size\" onClick={handleExtraSpaces}>Remove exrta spaces</button>\n        <button className=\"btn btn-primary mx-1 my-1 button-size\" onClick={handleClearText}>Clear text</button>\n      </div>\n\n      <div className=\"container my-3\">\n        <h1>Your text summart</h1>\n        <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\n        <p>You need {text.split(/\\s+/).filter((element)=>{return element.length!==0}).length * 0.008} minutes to read</p>\n        <h3>Preview</h3>\n        <p>{text.length > 0 ? text : \"Enter something to preview it here\"}</p>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default function Alert(props) {\n\n  const capitalize = (word) => {\n    word = word.toLowerCase()\n    return word.charAt(0).toUpperCase() + word.slice(1)\n}\n  return (\n    <div style={{height: '45px'}}> \n     {props.alert && <div className={`alert alert-${props.alert.ty} alert-dismissible fade show`} role=\"alert\">\n  <strong>{capitalize(props.alert.ty)}! </strong> {props.alert.msg}\n</div>}\n</div>\n  );\n}","import \"./App.css\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport { useState } from \"react\";\nimport Textform from \"./components/Textform\";\nimport Alert from \"./components/Alert\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\"\n\nfunction App() {\n  const [alert, setAlert] = useState(null);\n  const handleShowAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      ty: type,\n    });\n    setTimeout(() => setAlert(null), 1500);\n  };\n\n  const [theme, setTheme] = useState(\"light\");\n  const handleChangeTheme = (theme) => {\n    setTheme(theme);\n    document.body.className = `cstm-bg-${theme}`;\n    handleShowAlert(`${theme} mode has been enabled`, \"success\");\n  };\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar\n        title=\"TextUtils\"\n        about=\"About us\"\n        theme={theme}\n        changeTheme={handleChangeTheme}\n      />\n      <Alert alert={alert} />\n      <div className={`container my-3 cstm-bg-${theme}`}>\n\n        {/* <Switch> */}\n          {/* <Route exact path=\"/\"> */}\n            <Textform\n              heading=\"Enter the text to analyze\"\n              theme={theme}\n              showAlert={handleShowAlert}\n            />\n          {/* </Route> */}\n\n          {/* <Route exact path=\"/about\">\n            <About theme={theme} /> */}\n          {/* </Route>\n        </Switch> */}\n      </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}